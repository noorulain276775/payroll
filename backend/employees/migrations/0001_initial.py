# Generated by Django 5.1.4 on 2025-04-02 11:54

import django.core.validators
import django.db.models.deletion
import employees.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, default='photos/default.png', null=True, upload_to='photos/', validators=[employees.models.Employee.validate_file_type], verbose_name='Photo')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('place_of_birth', models.CharField(max_length=100, verbose_name='Place of Birth')),
                ('nationality', models.CharField(max_length=100, verbose_name='Nationality')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, verbose_name='Gender')),
                ('marital_status', models.CharField(choices=[('Married', 'Married'), ('Unmarried', 'Unmarried')], max_length=10, verbose_name='Marital Status')),
                ('spouse_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Spouse Name')),
                ('children', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Children')),
                ('father_name', models.CharField(max_length=100, verbose_name='Father Name')),
                ('mother_name', models.CharField(max_length=100, verbose_name='Mother Name')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('company_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Company Phone Number')),
                ('home_town_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Home Town Number')),
                ('email', models.EmailField(default='example@liya.ae', max_length=254, verbose_name='Company Email')),
                ('personal_email', models.EmailField(max_length=254, verbose_name='Personal Email')),
                ('joining_date', models.DateField(verbose_name='Joining Date')),
                ('insurance_expiry_date', models.DateField(blank=True, null=True, verbose_name='Insurance Expiry Date')),
                ('address', models.TextField(verbose_name='Address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Emergency Contact Number')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact Relation')),
                ('emirates_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Emirates ID')),
                ('emirates_id_expiry', models.DateField(blank=True, null=True, verbose_name='Emirates ID Expiry')),
                ('passport_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Passport No')),
                ('qualification', models.CharField(max_length=100, verbose_name='Qualification')),
                ('visa_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Visa No')),
                ('visa_expiry', models.DateField(blank=True, null=True, verbose_name='Visa Expiry')),
                ('designation', models.CharField(max_length=100, verbose_name='Designation')),
                ('department', models.CharField(choices=[('Accounts', 'Accounts'), ('Operations', 'Operations'), ('IT', 'IT')], max_length=100, verbose_name='Department')),
                ('previous_company_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Previous Company Name')),
                ('previous_company_designation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Previous Company Designation')),
                ('emirates_id_image', models.FileField(blank=True, null=True, upload_to='emirates_id/', validators=[employees.models.Employee.validate_file_type], verbose_name='Emirates ID Image')),
                ('passport_image', models.FileField(blank=True, null=True, upload_to='passport/', validators=[employees.models.Employee.validate_file_type], verbose_name='Passport Image')),
                ('visa_image', models.FileField(blank=True, null=True, upload_to='visa/', validators=[employees.models.Employee.validate_file_type], verbose_name='Visa Image')),
                ('highest_degree_certificate', models.FileField(blank=True, null=True, upload_to='degree/', validators=[employees.models.Employee.validate_file_type], verbose_name='Highest Degree Certificate')),
                ('insurance_card', models.FileField(blank=True, null=True, upload_to='insurance/', validators=[employees.models.Employee.validate_file_type], verbose_name='Insurance Card')),
                ('medical_conditions', models.TextField(blank=True, null=True, verbose_name='Medical Conditions')),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True, verbose_name='Blood Group')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Basic Salary')),
                ('housing_allowance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Housing Allowance')),
                ('transport_allowance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Transport Allowance')),
                ('other_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Other Allowance')),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Gross Salary')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bank Name')),
                ('account_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Account No')),
                ('iban', models.CharField(blank=True, max_length=100, null=True, verbose_name='IBAN')),
                ('swift_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='SWIFT Code')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='salary_details', to='employees.employee')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revised_basic_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Revised Basic Salary')),
                ('revised_housing_allowance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Revised Housing Allowance')),
                ('revised_transport_allowance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Revised Transport Allowance')),
                ('revised_other_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Revised Other Allowance')),
                ('revised_gross_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Revised Gross Salary')),
                ('previous_basic_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Previous Basic Salary')),
                ('previous_housing_allowance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Previous Housing Allowance')),
                ('previous_transport_allowance', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Previous Transport Allowance')),
                ('previous_other_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Previous Other Allowance')),
                ('previous_gross_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Previous Gross Salary')),
                ('revision_date', models.DateTimeField(auto_now_add=True, verbose_name='Revision Date')),
                ('revised_salary_effective_from', models.DateField(verbose_name='Revised Salary Effective From')),
                ('revision_reason', models.TextField(verbose_name='Reason for Revision')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_revisions', to='employees.employee')),
            ],
        ),
        migrations.CreateModel(
            name='PayrollRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)], verbose_name='Year')),
                ('total_salary_for_month', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Salary for Month')),
                ('overtime_days', models.PositiveIntegerField(default=0, verbose_name='Holiday Overtime Days')),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Overtime Amount')),
                ('normal_overtime_days', models.PositiveIntegerField(default=0, verbose_name='Normal Overtime Days')),
                ('normal_overtime_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Normal Overtime Amount')),
                ('unpaid_days', models.PositiveIntegerField(default=0, verbose_name='Unpaid Days')),
                ('unpaid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Unpaid Amount')),
                ('total_workable_days', models.PositiveIntegerField(default=30, verbose_name='Total Workable Days')),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Other Deductions')),
                ('current_daily_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Daily Salary')),
                ('current_gross_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Gross Salary')),
                ('current_basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Basic Salary')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee')),
            ],
            options={
                'unique_together': {('employee', 'month', 'year')},
            },
        ),
    ]
